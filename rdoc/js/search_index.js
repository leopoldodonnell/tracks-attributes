var search_data = {"index":{"searchIndex":["tracksattributes","classmethods","railtie","tacksattributesinternal","classmethods","accessors()","accessors()","accessors_all()","attr_accessor()","attr_reader()","attr_writer()","from_json()","from_xml()","to_json()","to_xml()","tracks_attributes()","readme"],"longSearchIndex":["tracksattributes","tracksattributes::classmethods","tracksattributes::railtie","tracksattributes::tacksattributesinternal","tracksattributes::tacksattributesinternal::classmethods","tracksattributes::tacksattributesinternal#accessors()","tracksattributes::tacksattributesinternal::classmethods#accessors()","tracksattributes::tacksattributesinternal#accessors_all()","tracksattributes::tacksattributesinternal::classmethods#attr_accessor()","tracksattributes::tacksattributesinternal::classmethods#attr_reader()","tracksattributes::tacksattributesinternal::classmethods#attr_writer()","tracksattributes::tacksattributesinternal#from_json()","tracksattributes::tacksattributesinternal#from_xml()","tracksattributes::tacksattributesinternal#to_json()","tracksattributes::tacksattributesinternal#to_xml()","tracksattributes::classmethods#tracks_attributes()",""],"info":[["TracksAttributes","","TracksAttributes.html","",""],["TracksAttributes::ClassMethods","","TracksAttributes/ClassMethods.html","",""],["TracksAttributes::Railtie","","TracksAttributes/Railtie.html","",""],["TracksAttributes::TacksAttributesInternal","","TracksAttributes/TacksAttributesInternal.html","",""],["TracksAttributes::TacksAttributesInternal::ClassMethods","","TracksAttributes/TacksAttributesInternal/ClassMethods.html","",""],["accessors","TracksAttributes::TacksAttributesInternal","TracksAttributes/TacksAttributesInternal.html#method-i-accessors","()","<p>Return the array of accessor symbols for instances of this class.\n"],["accessors","TracksAttributes::TacksAttributesInternal::ClassMethods","TracksAttributes/TacksAttributesInternal/ClassMethods.html#method-i-accessors","()","<p>return an array of all of the attributes that are not in active record\n"],["accessors_all","TracksAttributes::TacksAttributesInternal","TracksAttributes/TacksAttributesInternal.html#method-i-accessors_all","()","<p>Return a hash all of the accessor symbols and their values\n"],["attr_accessor","TracksAttributes::TacksAttributesInternal::ClassMethods","TracksAttributes/TacksAttributesInternal/ClassMethods.html#method-i-attr_accessor","(*vars)","<p>override attr_accessor to track accessors for an TracksAttributes\n"],["attr_reader","TracksAttributes::TacksAttributesInternal::ClassMethods","TracksAttributes/TacksAttributesInternal/ClassMethods.html#method-i-attr_reader","(*vars)","<p>override attr_reader to track accessors for an TracksAttributes\n"],["attr_writer","TracksAttributes::TacksAttributesInternal::ClassMethods","TracksAttributes/TacksAttributesInternal/ClassMethods.html#method-i-attr_writer","(*vars)","<p>override attr_writer to track accessors for an TracksAttributes\n"],["from_json","TracksAttributes::TacksAttributesInternal","TracksAttributes/TacksAttributesInternal.html#method-i-from_json","(json, include_root=false)","<p>Returns an instance of TracksAttributes from a JSON string\n"],["from_xml","TracksAttributes::TacksAttributesInternal","TracksAttributes/TacksAttributesInternal.html#method-i-from_xml","(xml)","<p>Returns an instance of TracksAttributes from an XML string\n"],["to_json","TracksAttributes::TacksAttributesInternal","TracksAttributes/TacksAttributesInternal.html#method-i-to_json","(options = nil)","<p>Convert an TracksAttributes instance to JSON by delegating conversion to\nHash.to_json\n<p>Without any options, …\n"],["to_xml","TracksAttributes::TacksAttributesInternal","TracksAttributes/TacksAttributesInternal.html#method-i-to_xml","(options = nil)","<p>Convert an TracksAttributes instance to XML by delegating conversion to\nHash.to_xml\n<p>Without any options, …\n"],["tracks_attributes","TracksAttributes::ClassMethods","TracksAttributes/ClassMethods.html#method-i-tracks_attributes","(options={})",""],["README","","README_rdoc.html","","<p>TracksAttributes\n<p>This project rocks and uses MIT-LICENSE.\n"]]}}